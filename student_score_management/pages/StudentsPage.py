# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'StudentsPage.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.Qt import QMainWindow
import dao.UserDao
from connector import DatabaseDriver
import pages.LoginPage
from pages.StudentScorePage import StudentScorePage


class StudentsPage(QMainWindow):

    def __init__(self, username):
        super().__init__()
        self.username = username
        self.driver = DatabaseDriver.DatabaseDriver()
        self.setupUi()
        self.show()

    def setupUi(self):
        self.setObjectName("MainWindow")
        self.resize(864, 437)
        self.setStyleSheet("background-image: url(views/imgs/4.jpg);")
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.welcome_label = QtWidgets.QLabel(self.centralwidget)
        self.welcome_label.setGeometry(QtCore.QRect(50, 10, 520, 61))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.welcome_label.setFont(font)
        self.welcome_label.setObjectName("welcome_label")
        self.search_btn = QtWidgets.QPushButton(self.centralwidget)
        self.search_btn.setGeometry(QtCore.QRect(150, 130, 161, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.search_btn.setFont(font)
        self.search_btn.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.search_btn.setObjectName("search_btn")
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 464, 22))
        self.menubar.setObjectName("menubar")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

        self.welcome_label.setText("欢迎您，{}同学".format(self.get_username()))
        self.search_btn.clicked.connect(self.search_btn_click)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.welcome_label.setText(_translate("MainWindow", "欢迎您:"))
        self.search_btn.setText(_translate("MainWindow", "点击查询"))

    def get_username(self):
        self.result: tuple = dao.UserDao.get_user_by_all(self.driver, self.username)
        if not self.result:
            return self.username
        else:
            return self.result[0]

    def search_btn_click(self):

        self.result: tuple = dao.UserDao.get_user_by_all(self.driver, self.username)
        # 如果不存在成绩则警告
        if not self.result:
            QtWidgets.QMessageBox.information(self, "注意", "暂时没有成绩")
        # 存在则进入学生成绩页面
        else:
            self.student_scroe = StudentScorePage(self.username)
        return

    # 设置页面的关闭提示
    def closeEvent(self, event):
        result = QtWidgets.QMessageBox.question(self, "注意", "你确定要关闭我吗？？",
                                                QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        if (result == QtWidgets.QMessageBox.Yes):
            event.accept()
            self.login_page = pages.LoginPage.LoginPage()
        else:
            event.ignore()
